{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NoteList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","onClick","size","AddNote","handleAddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","NoteList","notes","map","note","Search","handleSearchNote","type","Header","handleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ef6d0e3.chunk.js","sourcesContent":["import { MdDeleteForever } from 'react-icons/md';\n\nconst Note = ({id ,text, date , handleDeleteNote}) =>{\n\treturn (\n\t\t<div className='note'>\n\t\t\t<span>{text}</span>\n\t\t\t<div className=\"note-footer\">\n\t\t\t\t<small>{date}</small>\n\t\t\t\t<MdDeleteForever onClick={() => handleDeleteNote(id)}\n\t\t\t\t className='delete-icon'  size=\"1.3em\"/>\n\t\t\t</div>\n\t\t</div>\n\n\t)\n}\n\nexport default Note;","import {useState} from 'react'\n\nconst AddNote = ( {handleAddNote}) =>{\n\tconst characterLImit = 200\n\n\tconst [noteText, setNoteText] = useState('')\n\n\tconst handleChange = (event) => {\n\t\tif(characterLImit - event.target.value.length >=0){\n\t\tsetNoteText(event.target.value)\n\t\t}\n\t}\n\tconst handleSaveClick = () =>{\n\t\tif(noteText.trim().length > 0){\n\t\thandleAddNote(noteText)\n\t\tsetNoteText('')\n\t\t}\n\t}\n\n\treturn(\n\t\t<div className='note new'>\n\t\t\t<textarea\n\t\t\t\trows='8'\n\t\t\t\tcols='10'\n\t\t\t\tplaceholder=\"Type to add a note...\"\n\t\t\t\tvalue={noteText}\n\t\t\t\tonChange={handleChange}\n\t\t\t></textarea>\n\t\t\t<div className=\"note-footer\">\n\t\t\t\t<small>{characterLImit - noteText.length} Remaining</small>\n\t\t\t\t<button className=\"save\" onClick={handleSaveClick}>Save</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default AddNote;","import Note from './Note'\nimport AddNote from './AddNote'\n\nconst NoteList = ({ notes , handleAddNote ,  handleDeleteNote,}) => {\n\treturn(\n\t\t<div className=\"note-list\">\n\t\t\t{notes.map((note) => (\n\t\t\t <Note \n\t\t\t \tid={note.id} \n\t\t\t \ttext={note.text}  \n\t\t\t \tdate={note.date} \n\t\t\t \thandleDeleteNote={handleDeleteNote}\n\n\t\t\t \t/>\n\t\t\t ))}\n\t\t\t<AddNote handleAddNote={handleAddNote} />\n\t\t</div>\n\t)\n}\n\nexport default NoteList","import React from 'react'\nimport {MdSearch} from 'react-icons/md'\n\nconst Search = ( ({handleSearchNote}) =>{\n\n\treturn(\n\n\t\t<div className=\"search\">\n\t\t\t<MdSearch className='search-icons' size='1.3em' />\n\t\t\t<input   onChange={(event)=> handleSearchNote(event.target.value)} type=\"text\" placeholder=\"Type to search\" />\n\t\t</div>\n\n\t)\n\n\n\n})\n\n\nexport default Search\n\n","import React from 'react'\n\nconst Header = ({ handleDarkMode }) =>{\n\treturn(\n\t\t<div className=\"header\">\n\t\t\t<h1>Notes</h1>\n\t\t\t<button \n\t\t\t\tonClick={() =>\n\t\t\t\t\t handleDarkMode (\n\t\t\t\t\t\t(previousDarkMode) => !previousDarkMode\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\tclassName='save'>Toogle Mode</button>\n\t\t</div>\n\t)\n}\n\nexport default Header","import {useState, useEffect } from 'react'\nimport {nanoid} from 'nanoid'\nimport NoteList from './components/NoteList'\nimport Search from './components/Search'\nimport Header from './components/Header'\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([\n  {\n    id:nanoid(),\n    text:'To succeed, we must first believe that we can - Michael Korda',\n    date:'26/06/21',\n  },\n   {\n    id:nanoid(),\n    text:'You have to believe in Yourself - SunTzu',\n    date:'26/06/21',\n  },\n   {\n    id:nanoid(),\n    text:'It s more important to know where you are going than, to get there quickly',\n    date:'26/06/21',\n  },\n\n    ]);\n\n\nconst [searchText , setSearchText] = useState('')\nconst [darkMode , setDarkMode] = useState(false)\n\nuseEffect(() => {\n    const savedNotes = JSON.parse(\n      localStorage.getItem('react-notes-app-data')\n    );\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      'react-notes-app-data',\n      JSON.stringify(notes)\n    );\n  }, [notes]);\n\n\n\n  const addNote = (text) =>{\n    const date = new Date()\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...notes,newNote]\n    setNotes(newNotes)\n\n  }\n\n\nconst deleteNote = (id) =>{\n  const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n}\n\n\n  return (\n\n    <div className={`${darkMode && 'dark-mode'}`}>\n    <div className=\"container\">\n    <Header handleDarkMode={setDarkMode} />\n    <Search handleSearchNote={setSearchText} />\n      <NoteList notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText))}\n      handleAddNote={addNote}  handleDeleteNote={deleteNote}/>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}